{"version":3,"sources":["components/Section/index.js","components/Statistics/index.js","components/FeedbackOptions/index.js","App.js","index.js","components/FeedbackOptions/styles.module.scss"],"names":["FeedbackOptions","props","className","children","Statistics","good","neutural","bad","total","positivePercentage","console","log","styles","onGoodBtn","onNeuturalBtn","onBadBtn","wrapper","btn","onClick","App","state","handleGoodBtn","setState","prevState","handleNeuturalBtn","handleBadBtn","Section","title","this","onLeaveFeedback","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2NAaeA,EAXS,SAACC,GACvB,OACE,sBAAKC,UAAU,UAAf,UACE,uDACCD,EAAME,SAAS,GAChB,4CACCF,EAAME,SAAS,OCmBPC,EAzBI,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAChD,OACE,qBAAKP,UAAU,QAAf,SACGM,EAAQ,EACP,gCACE,uCAAUH,KACV,2CAAcC,KACd,sCAASC,KACT,yCAAYC,KACZ,qDAAwBC,EAAxB,UAGF,qD,gBCZRC,QAAQC,IAAIC,KAsCZ,IAgBeZ,EAhBS,SAAC,GAA4C,IAA1Ca,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SACnD,OACE,sBAAKb,UAAWU,IAAOI,QAAvB,UACE,wBAAQd,UAAWU,IAAOK,IAAKC,QAASL,EAAxC,kBAGA,wBAAQX,UAAWU,IAAOK,IAAKC,QAASJ,EAAxC,sBAGA,wBAAQZ,UAAWU,IAAOK,IAAKC,QAASH,EAAxC,qBCoCSI,E,4MApEbC,MAAQ,CACNf,KAAM,EACNC,SAAU,EACVC,IAAK,G,EAGPc,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BlB,KAAMkB,EAAUlB,KAAO,O,EAI3BmB,kBAAoB,WAClB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BjB,SAAUiB,EAAUjB,SAAW,O,EAInCmB,aAAe,WACb,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BhB,IAAKgB,EAAUhB,IAAM,O,4CAIzB,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,eAACwB,EAAD,CAASC,MAAM,GAAf,UACE,cAAC,EAAD,CACEd,UAAWe,KAAKP,cAChBP,cAAec,KAAKJ,kBACpBT,SAAUa,KAAKH,aACfI,gBAAiB,KAEnB,cAAC,EAAD,CACExB,KAAMuB,KAAKR,MAAMf,KACjBC,SAAUsB,KAAKR,MAAMd,SACrBC,IAAKqB,KAAKR,MAAMb,IAChBC,MAAOoB,KAAKR,MAAMf,KAAOuB,KAAKR,MAAMd,SAAWsB,KAAKR,MAAMb,IAC1DE,mBAAoBqB,KAAKC,MACtBH,KAAKR,MAAMf,MACTuB,KAAKR,MAAMf,KAAOuB,KAAKR,MAAMd,SAAWsB,KAAKR,MAAMb,KACpD,gB,GAnDEyB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,IAAM,uB","file":"static/js/main.6744acff.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = (props) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <h2>Please leave feedback</h2>\r\n      {props.children[0]}\r\n      <h2>Statistics</h2>\r\n      {props.children[1]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Statistics = ({ good, neutural, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className=\"stats\">\r\n      {total > 0 ? (\r\n        <div>\r\n          <p>Good: {good}</p>\r\n          <p>Neutural: {neutural}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p> Total: {total}</p>\r\n          <p> Positive feedback: {positivePercentage}%</p>\r\n        </div>\r\n      ) : (\r\n        <p>No feedback given</p>\r\n      )}\r\n    </div>\r\n    //   <div className=\"stats\">\r\n    //   <p>Good: {good}</p>\r\n    //   <p>Neutural: {neutural}</p>\r\n    //   <p>Bad: {bad}</p>\r\n    //   {total > 0 && <p> Total: {total}</p>}\r\n    //   {total > 0 && <p> Total: {positivePercentage}%</p>}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nconsole.log(styles);\r\n// class FeedbackOptions extends React.Component {\r\n//   //   state = {\r\n//   //     good: 0,\r\n//   //     neutral: 0,\r\n//   //     bad: 0,\r\n//   //   };\r\n\r\n//   handleGoodBtn = event => {\r\n//     const target = event.target;\r\n//     console.log(target);\r\n//   };\r\n\r\n//   handleNeuturalBtn = () => {\r\n//     console.log(this.state.good);\r\n//   };\r\n\r\n//   handleBadBtn = () => {\r\n//     console.log('bad');\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className={styles.wrapper}>\r\n//         <button className={styles.btn} onClick={this.handleGoodBtn}>\r\n//           Good\r\n//         </button>\r\n//         <button className={styles.btn} onClick={this.handleNeuturalBtn}>\r\n//           Neutural\r\n//         </button>\r\n//         <button className={styles.btn} onClick={this.handleBadBtn}>\r\n//           Bad\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst FeedbackOptions = ({ onGoodBtn, onNeuturalBtn, onBadBtn }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <button className={styles.btn} onClick={onGoodBtn}>\r\n        Good\r\n      </button>\r\n      <button className={styles.btn} onClick={onNeuturalBtn}>\r\n        Neutural\r\n      </button>\r\n      <button className={styles.btn} onClick={onBadBtn}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\n\n// import logo from './logo.svg';\n// import './App.css';\n\nclass App extends Component {\n  // static defaultProps = {\n  //   good: 0,\n  //   neutural: 0,\n  //   bad: 0,\n  // };\n\n  // static propTypes = {};\n\n  state = {\n    good: 0,\n    neutural: 0,\n    bad: 0,\n  };\n\n  handleGoodBtn = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }));\n  };\n\n  handleNeuturalBtn = () => {\n    this.setState(prevState => ({\n      neutural: prevState.neutural + 1,\n    }));\n  };\n\n  handleBadBtn = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Section title=\"\">\n          <FeedbackOptions\n            onGoodBtn={this.handleGoodBtn}\n            onNeuturalBtn={this.handleNeuturalBtn}\n            onBadBtn={this.handleBadBtn}\n            onLeaveFeedback={23}\n          ></FeedbackOptions>\n          <Statistics\n            good={this.state.good}\n            neutural={this.state.neutural}\n            bad={this.state.bad}\n            total={this.state.good + this.state.neutural + this.state.bad}\n            positivePercentage={Math.round(\n              (this.state.good /\n                (this.state.good + this.state.neutural + this.state.bad)) *\n                100,\n            )}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Section title=\"\">\n//         <FeedbackOptions options={23} onLeaveFeedback={23}></FeedbackOptions>\n//         <Statistics\n//           good={1}\n//           neutural={2}\n//           bad={3}\n//           total={5}\n//           positivePercentage={1}\n//         />\n//       </Section>\n//     </div>\n//   );\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__2BFqg\"};"],"sourceRoot":""}