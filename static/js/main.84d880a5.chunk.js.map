{"version":3,"sources":["components/Section/index.js","components/Statistics/index.js","components/FeedbackOptions/index.js","App.js","index.js","components/FeedbackOptions/styles.module.scss","components/Section/styles.module.scss"],"names":["FeedbackOptions","props","className","styles","section","children","Statistics","good","neutural","bad","total","positivePercentage","defaultProps","onGoodBtn","onNeuturalBtn","onBadBtn","wrapper","btn","onClick","App","state","handleGoodBtn","setState","prevState","handleNeuturalBtn","handleBadBtn","countTotalFeedback","Math","round","this","Section","title","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2OAceA,EAXS,SAAAC,GACtB,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,uDACCH,EAAMI,SAAS,GAChB,4CACCJ,EAAMI,SAAS,OCNhBC,EAAa,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAChD,OACE,qBAAKT,UAAU,QAAf,SACGQ,EAAQ,EACP,gCACE,uCAAUH,KACV,2CAAcC,KACd,sCAASC,KACT,yCAAYC,KACZ,qDAAwBC,EAAxB,UAGF,qDAMRL,EAAWM,aAAe,CACxBF,MAAO,EACPC,mBAAoB,GAWPL,Q,gBCfAN,EAhBS,SAAC,GAA4C,IAA1Ca,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SACnD,OACE,sBAAKb,UAAWC,IAAOa,QAAvB,UACE,wBAAQd,UAAWC,IAAOc,IAAKC,QAASL,EAAxC,kBAGA,wBAAQX,UAAWC,IAAOc,IAAKC,QAASJ,EAAxC,sBAGA,wBAAQZ,UAAWC,IAAOc,IAAKC,QAASH,EAAxC,qBCsESI,E,4MA5EbC,MAAQ,CACNb,KAAM,EACNC,SAAU,EACVC,IAAK,G,EAGPY,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BhB,KAAMgB,EAAUhB,KAAO,O,EAI3BiB,kBAAoB,WAClB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1Bf,SAAUe,EAAUf,SAAW,O,EAInCiB,aAAe,WACb,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,IAAKc,EAAUd,IAAM,O,EAIzBiB,mBAAqB,WAEnB,OADc,EAAKN,MAAMb,KAAO,EAAKa,MAAMZ,SAAW,EAAKY,MAAMX,K,EAInEE,mBAAqB,WACnB,OAAOgB,KAAKC,MAAO,EAAKR,MAAMb,KAAO,EAAKmB,qBAAwB,M,4CAGpE,WACE,MAAgCG,KAAKT,MAA7Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,IAClBC,EAAQmB,KAAKH,qBACbf,EAAqBkB,KAAKlB,qBAEhC,OACE,qBAAKT,UAAU,MAAf,SACE,eAAC4B,EAAD,CAASC,MAAM,GAAf,UACE,cAAC,EAAD,CACElB,UAAWgB,KAAKR,cAChBP,cAAee,KAAKL,kBACpBT,SAAUc,KAAKJ,eAEjB,cAAC,EAAD,CACElB,KAAMA,EACNC,SAAUA,EACVC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GApDdqB,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,IAAM,sB,kBCAxBD,EAAOC,QAAU,CAAC,QAAU,2B","file":"static/js/main.84d880a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst FeedbackOptions = props => {\r\n  return (\r\n    <div className={styles.section}>\r\n      <h2>Please leave feedback</h2>\r\n      {props.children[0]}\r\n      <h2>Statistics</h2>\r\n      {props.children[1]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutural, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className=\"stats\">\r\n      {total > 0 ? (\r\n        <div>\r\n          <p>Good: {good}</p>\r\n          <p>Neutural: {neutural}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p> Total: {total}</p>\r\n          <p> Positive feedback: {positivePercentage}%</p>\r\n        </div>\r\n      ) : (\r\n        <p>No feedback given</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutural: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst FeedbackOptions = ({ onGoodBtn, onNeuturalBtn, onBadBtn }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <button className={styles.btn} onClick={onGoodBtn}>\r\n        Good\r\n      </button>\r\n      <button className={styles.btn} onClick={onNeuturalBtn}>\r\n        Neutural\r\n      </button>\r\n      <button className={styles.btn} onClick={onBadBtn}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutural: 0,\n    bad: 0,\n  };\n\n  handleGoodBtn = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }));\n  };\n\n  handleNeuturalBtn = () => {\n    this.setState(prevState => ({\n      neutural: prevState.neutural + 1,\n    }));\n  };\n\n  handleBadBtn = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutural + this.state.bad;\n    return total;\n  };\n\n  positivePercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutural, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.positivePercentage();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"\">\n          <FeedbackOptions\n            onGoodBtn={this.handleGoodBtn}\n            onNeuturalBtn={this.handleNeuturalBtn}\n            onBadBtn={this.handleBadBtn}\n          ></FeedbackOptions>\n          <Statistics\n            good={good}\n            neutural={neutural}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Section title=\"\">\n//         <FeedbackOptions options={23} onLeaveFeedback={23}></FeedbackOptions>\n//         <Statistics\n//           good={1}\n//           neutural={2}\n//           bad={3}\n//           total={5}\n//           positivePercentage={1}\n//         />\n//       </Section>\n//     </div>\n//   );\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__2BFqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles_section__uxG5p\"};"],"sourceRoot":""}